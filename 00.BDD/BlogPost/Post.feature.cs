// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.4.0.0
//      SpecFlow Generator Version:3.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace BDD.SPECS.BlogPost
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class PostManagementFeature : object, Xunit.IClassFixture<PostManagementFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "Post.feature"
#line hidden
        
        public PostManagementFeature(PostManagementFeature.FixtureData fixtureData, BDD_SPECS_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "BlogPost", "Post Management", "    In order to manage Posts efficienty\r\n    As an Admin\r\n    I want to see the l" +
                    "ist of Posts and add a new one to the list", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Adding a new post")]
        [Xunit.TraitAttribute("FeatureTitle", "Post Management")]
        [Xunit.TraitAttribute("Description", "Adding a new post")]
        public virtual void AddingANewPost()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adding a new post", null, tagsOfScenario, argumentsOfScenario);
#line 7
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
        testRunner.Given("I am in NewPost page in admin panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
        testRunner.When("I enter PostTitle as \"Papillon 1973 and its soundtracks\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
        testRunner.And("I enter ShortDesc as \"A masterpiece by Jerry Goldsmith\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
        testRunner.And("I enter Text as \"Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one" +
                        " of most memorable songs in movie history\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
        testRunner.And("I enter CreationDate as \"2020/09/11\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
        testRunner.And("I enter CategoryTitle as \"Podcasts\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
        testRunner.And("I enter BlogAuthor as \"Mehdi Vahabisani\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
        testRunner.And("I enter KeyWord as \"Papillon\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
        testRunner.And("I click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
        testRunner.Then("I should be redirected to PostIndex page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
        testRunner.And("I should see the \"Papillon 1973 and its soundtracks\" record on top of the list", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Viewing PostIndex Page from NewPost page")]
        [Xunit.TraitAttribute("FeatureTitle", "Post Management")]
        [Xunit.TraitAttribute("Description", "Viewing PostIndex Page from NewPost page")]
        public virtual void ViewingPostIndexPageFromNewPostPage()
        {
            string[] tagsOfScenario = ((string[])(null));
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Viewing PostIndex Page from NewPost page", null, tagsOfScenario, argumentsOfScenario);
#line 20
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 21
        testRunner.Given("I am in NewPost page in admin panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 22
        testRunner.When("I click on ViewPostIndex button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 23
        testRunner.Then("I should be redirected into PostIndex page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
        testRunner.And("I should see a table of Posts and their corresponding fields of information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
        testRunner.And("I should see NewPost button on the left top of the page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Null PostData entry")]
        [Xunit.TraitAttribute("FeatureTitle", "Post Management")]
        [Xunit.TraitAttribute("Description", "Null PostData entry")]
        [Xunit.InlineDataAttribute("null", "null", "null", "null", "null", "null", "null", "Post Title can not be null", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "null", "null", "null", "null", "null", "null", "Short Description can not be null", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "null", "null", "null", "null", "null", "text can not be null", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "null", "null", "null", "null", "creation date can not be null", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "2020/09/11", "null", "null", "null", "category title can not be null", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "2020/09/11", "Podcasts", "null", "null", "blog author can not be null", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "2020/09/11", "Podcasts", "Mehdi Vahabisani", "null", "KeyWord can not be null", new string[0])]
        public virtual void NullPostDataEntry(string postTitle, string shortDesc, string text, string creationDate, string categoryTitle, string blogAuthor, string keyWord, string errorDesc, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("PostTitle", postTitle);
            argumentsOfScenario.Add("ShortDesc", shortDesc);
            argumentsOfScenario.Add("Text", text);
            argumentsOfScenario.Add("CreationDate", creationDate);
            argumentsOfScenario.Add("CategoryTitle", categoryTitle);
            argumentsOfScenario.Add("BlogAuthor", blogAuthor);
            argumentsOfScenario.Add("KeyWord", keyWord);
            argumentsOfScenario.Add("ErrorDesc", errorDesc);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Null PostData entry", null, tagsOfScenario, argumentsOfScenario);
#line 27
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 28
        testRunner.Given("I am in NewPost page in Admin Panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 29
        testRunner.When(string.Format("I Enter {0}, {1}, {2}, {3}, {4}, {5}, {6}", postTitle, shortDesc, text, creationDate, categoryTitle, blogAuthor, keyWord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 30
        testRunner.And("I click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
        testRunner.Then(string.Format("I should see {0} correctly", errorDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="WhiteSpace PostData entry")]
        [Xunit.TraitAttribute("FeatureTitle", "Post Management")]
        [Xunit.TraitAttribute("Description", "WhiteSpace PostData entry")]
        [Xunit.InlineDataAttribute("whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "post title can not be empty", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "Short Description can not be empty", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "Text can not be empty", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "whiteSpace", "whiteSpace", "whiteSpace", "whiteSpace", "creation date can not be empty", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "2020/09/11", "whiteSpace", "whiteSpace", "whiteSpace", "category title can not be empty", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "2020/09/11", "Podcasts", "whiteSpace", "whiteSpace", "passworblog author can not be empty", new string[0])]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "2020/09/11", "Podcasts", "Mehdi Vahabisani", "whiteSpace", "KeyWord can not be empty", new string[0])]
        public virtual void WhiteSpacePostDataEntry(string postTitle, string shortDesc, string text, string creationDate, string categoryTitle, string blogAuthor, string keyWord, string errorDesc, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("PostTitle", postTitle);
            argumentsOfScenario.Add("ShortDesc", shortDesc);
            argumentsOfScenario.Add("Text", text);
            argumentsOfScenario.Add("CreationDate", creationDate);
            argumentsOfScenario.Add("CategoryTitle", categoryTitle);
            argumentsOfScenario.Add("BlogAuthor", blogAuthor);
            argumentsOfScenario.Add("KeyWord", keyWord);
            argumentsOfScenario.Add("ErrorDesc", errorDesc);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WhiteSpace PostData entry", null, tagsOfScenario, argumentsOfScenario);
#line 43
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 44
        testRunner.Given("I am in NewPost page in Admin Panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 45
        testRunner.When(string.Format("I Enter {0}, {1}, {2}, {3}, {4}, {5}, {6}", postTitle, shortDesc, text, creationDate, categoryTitle, blogAuthor, keyWord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
        testRunner.And("I click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
        testRunner.Then(string.Format("I should see {0} correctly", errorDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Duplicated value for Post title")]
        [Xunit.TraitAttribute("FeatureTitle", "Post Management")]
        [Xunit.TraitAttribute("Description", "Duplicated value for Post title")]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "2020/09/11", "Podcasts", "Mehdi Vahabisani", "Papillon", new string[0])]
        public virtual void DuplicatedValueForPostTitle(string postTitle, string shortDesc, string text, string creationDate, string categoryTitle, string blogAuthor, string keyWord, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("PostTitle", postTitle);
            argumentsOfScenario.Add("ShortDesc", shortDesc);
            argumentsOfScenario.Add("Text", text);
            argumentsOfScenario.Add("CreationDate", creationDate);
            argumentsOfScenario.Add("CategoryTitle", categoryTitle);
            argumentsOfScenario.Add("BlogAuthor", blogAuthor);
            argumentsOfScenario.Add("KeyWord", keyWord);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Duplicated value for Post title", null, tagsOfScenario, argumentsOfScenario);
#line 58
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "PostTitle",
                            "ShortDesc",
                            "Text",
                            "CreationDate",
                            "CategoryTitle",
                            "BlogAuthor",
                            "KeyWord"});
                table1.AddRow(new string[] {
                            "Papillon 1973 and its soundtracks",
                            "A masterpiece by Jerry Goldsmith",
                            "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
                                "e songs in movie history",
                            "2020/09/11",
                            "Podcasts",
                            "Mehdi Vahabisani",
                            "Papillon"});
#line 59
        testRunner.Given("the following Post item already exists:", ((string)(null)), table1, "Given ");
#line hidden
#line 62
        testRunner.And("I am in NewPost page in Admin Panel in order to add a new post", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 63
        testRunner.When(string.Format("I Enter a Duplicated {0}, {1}, {2}, {3}, {4}, {5}, {6}", postTitle, shortDesc, text, creationDate, categoryTitle, blogAuthor, keyWord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 64
        testRunner.And("I click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
        testRunner.Then("I should see <ErrorDesc> correctly", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="invalid post creation date (entering a date greater than today)")]
        [Xunit.TraitAttribute("FeatureTitle", "Post Management")]
        [Xunit.TraitAttribute("Description", "invalid post creation date (entering a date greater than today)")]
        [Xunit.InlineDataAttribute("Papillon 1973 and its soundtracks", "A masterpiece by Jerry Goldsmith", "Composed by Jerry Goldsmith, Papillon 1973 soundtrack yet is one of most memorabl" +
            "e songs in movie history", "2020/10/24", "Podcasts", "Mehdi Vahabisani", "Papillon", "creation date must not be greater than today", new string[0])]
        public virtual void InvalidPostCreationDateEnteringADateGreaterThanToday(string postTitle, string shortDesc, string text, string creationDate, string categoryTitle, string blogAuthor, string keyWord, string errorDesc, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("PostTitle", postTitle);
            argumentsOfScenario.Add("ShortDesc", shortDesc);
            argumentsOfScenario.Add("Text", text);
            argumentsOfScenario.Add("CreationDate", creationDate);
            argumentsOfScenario.Add("CategoryTitle", categoryTitle);
            argumentsOfScenario.Add("BlogAuthor", blogAuthor);
            argumentsOfScenario.Add("KeyWord", keyWord);
            argumentsOfScenario.Add("ErrorDesc", errorDesc);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("invalid post creation date (entering a date greater than today)", null, tagsOfScenario, argumentsOfScenario);
#line 70
    this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 71
        testRunner.Given("I am in NewPost page in Admin Panel", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 72
        testRunner.When(string.Format("I Enter {0}, {1}, {2}, a {3} greater than today , {4}, {5}, {6}", postTitle, shortDesc, text, creationDate, categoryTitle, blogAuthor, keyWord), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 73
        testRunner.And("I click on save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
        testRunner.Then(string.Format("I should see {0} correctly", errorDesc), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.4.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                PostManagementFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                PostManagementFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
